heat_template_version: 2016-10-14

description: >
  Install vrouter package and load kernel module before running
  network config.  Note this will require any repos configured
  via DeployArtifactURLs to be accessible via the ctlplane network.

parameters:
  server:
    type: string

  DeployArtifactURLs:
    default: []
    description: A list of HTTP URLs containing deployment artifacts.
     Currently supports tarballs and RPM packages.
    type: comma_delimited_list

resources:
  # First step, we run the DeployArtifacts logic early, so we can e.g install
  # a repo file from a tgz.  If only a subset of the DeployArtifacts things are
  # needed, instead pass a parameter with a subset of the DeployArtifactURLs
  # e.g pointing to one tarball with only the vrouter repo file in it
  PreNetworkDeployArtifactsConfig:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      inputs:
        - name: artifact_urls
          default: {list_join: [' ', {get_param: DeployArtifactURLs}]}
      config: {get_file: ../../puppet/deploy-artifacts.sh}

  PreNetworkDeployArtifactsDeployment:
    type: OS::Heat::SoftwareDeployment
    properties:
      name: PreNetworkDeployArtifactsDeployment
      server:  {get_param: server}
      config: {get_resource: PreNetworkDeployArtifactsConfig}
      actions: ['CREATE'] # Only do this on CREATE

  # Second step, install the package and load the module
  # This could be done via bash, puppet, ansible or whatever
  PreNetworkVrouterConfig:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config: |
        #!/bin/bash
        yum -y install contrail-openstack-vrouter
        weak-modules --add-kernel
        modprobe vrouter
        # FIXME: do we persist loading the module here or does the package
        # create a modprobe.d config to handle that?
        

  PreNetworkVrouterDeployment:
    type: OS::Heat::SoftwareDeployment
    depends_on: PreNetworkDeployArtifactsDeployment
    properties:
      name: PreNetworkVrouterDeployment
      server:  {get_param: server}
      config: {get_resource: PreNetworkVrouterConfig}
      actions: ['CREATE'] # Only do this on CREATE